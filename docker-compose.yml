version: "3.8"

networks:
  laravel:

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    # image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
      - "9001:9001"

    volumes:
      - "${PROJECT_DIR}:${WORKING_DIR}"
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - "${PROJECT_DIR}:${WORKING_DIR}"
      - ./php/docker-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

    ports:
      - "9000:9000"

    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - "${PROJECT_DIR}:${WORKING_DIR}"
    working_dir: "${WORKING_DIR}"
    depends_on:
      - php
    networks:
      - laravel

  npm:
    image: node:lts-alpine
    container_name: npm
    volumes:
      - "${PROJECT_DIR}:${WORKING_DIR}"
    working_dir: "${WORKING_DIR}"
    entrypoint: ["npm"]

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - "${PROJECT_DIR}:${WORKING_DIR}"
    depends_on:
      - mysql
    working_dir: "${WORKING_DIR}"
    entrypoint: ["php", "${WORKING_DIR}/artisan"]
    networks:
      - laravel
